{"version":3,"sources":["client/client.js","redux/state/auth-state/auth-action-types.ts","redux/state/auth-state/auth-action-creators.ts","redux/state/auth-state/auth-reducer.ts","redux/store.ts","paths/index.ts","hooks/auth-hook.ts","hooks/media-query-hook.ts","images/github-logo-white.svg","components/common/header.tsx","layouts/common-layout.tsx","components/tabs/helpers/section.tsx","components/tabs/not-found-tab.tsx","images/github-logo.svg","components/common/call-to-auth.tsx","components/common/auth-modal.tsx","components/common/repository-card.tsx","client/octokit.js","hooks/repos-search-hook.ts","hooks/pagination-hook.ts","components/common/pagination.tsx","components/tabs/repositories-board-tab.tsx","components/tabs/my-repositories-tab.tsx","components/tabs/about-tab.tsx","App.tsx","index.tsx"],"names":["supabase","createClient","process","authActionTypes","setAuth","auth","type","payload","defaultState","status","user","loggerMiddleware","createLogger","rootReducer","combineReducers","state","action","repositories","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","Paths","NotifySuccess","content","message","success","duration","then","useAuth","secret","set","newSecret","get","SecretStore","dispatch","useDispatch","useSelector","resetAuth","navigate","useNavigate","checkAuth","session","provider_token","username","user_metadata","user_name","avatarURL","avatar_url","email","repos","useEffect","window","addEventListener","signInWithGithub","signIn","provider","scopes","redirectTo","catch","finally","signOut","useMediaQuery","query","useState","matches","setMatches","media","matchMedia","listener","addListener","removeListener","StyledHeader","styled","header","zIndex","position","width","background","overflow","paddingLeft","paddingRight","Item","Link","AuthButton","Button","Logo","img","float","height","margin","Username","div","MobileMoreButton","Dropdown","Header","memo","props","isSmallDevice","isExtraSmallDevice","isMinimumSize","MobileMenu","overlay","menu","placement","icon","MenuOutlined","to","authStatus","onClick","signOutCallback","signInCallback","src","GithubLogo","alt","Content","display","paddingTop","CommonLayout","children","Section","section","paddingBottom","NotFound","location","useLocation","pathname","Wrapper","Text","span","CompositeLogo","fontSize","textAlign","CentredText","CallToAuth","closeModelCallback","AuthModal","visible","setVisible","handleCancel","onCancel","footer","centered","CardStyle","Meta","Card","PropertyWrapper","RepositoryCard","style","loading","avatar","active","imageURL","title","name","description","language","license","href","licenseURL","octokit","Octokit","useReposSearch","defaultPageSize","page","pageSize","pagination","setPagination","usePagination","fetching","setFetching","fetchingError","setFetchingError","searchQuery","setSearchQuery","searchTopics","setSearchTopics","order","sort","undefined","searchFilters","setSearchFilters","totalCount","items","setRepos","rest","search","q","split","filter","topic","map","reduce","per_page","data","total_count","error","code","resetRepos","Pagination","AntPagination","TopicsSelectStyle","marginTop","marginBottom","RepoCardsBox","Row","justifyContent","FiltersWrapper","flexWrap","OverflowNotification","p","lineHeight","color","FilterSelectWrapper","verticalAlign","SearchBox","ContentBox","RepositoriesBoardTab","pageSizeOptions","Option","Select","isMobileDevice","SelectStyle","Search","onSearch","value","size","placeholder","mode","tokenSeparators","onChange","topics","onClear","bordered","defaultValue","onSelect","closable","orientation","gutter","xs","sm","md","repo","url","id","length","total","responsive","showSizeChanger","showLessItems","StyledStatistic","Statistic","UserInfo","mobile","tablet","valueStyle","Repositories","MyRepositoriesTab","listForUser","console","log","lg","AboutTab","padding","borderRadius","maxWidth","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fbb2d1f.chunk.js","sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);","export const authActionTypes = {\n    SET_AUTH: 'SET_AUTH',\n    SET_REPOSITORIES: 'FETCH_REPOSITORIES',\n};","import { authActionTypes } from \"./auth-action-types\";\nimport { RepositoryModel, AuthModel } from \"../../models\";\n\nexport const setAuth = (auth: AuthModel) => {\n    return {\n        type: authActionTypes.SET_AUTH,\n        payload: auth\n    }\n}\n\nexport const setRepositories = (repositories: Array<RepositoryModel>) => {\n    return {\n        type: authActionTypes.SET_REPOSITORIES,\n        payload: repositories\n    }\n}","import { AuthModel } from \"../../models\";\nimport { authActionTypes } from \"./auth-action-types\";\n\n\nconst defaultState: AuthModel = {\n    status: false,\n    user: null\n}\n\nexport interface Action {\n    type: string,\n    payload: any\n}\n\nexport function authReducer (state: AuthModel = defaultState, action: Action) {\n    switch (action.type) {\n        case authActionTypes.SET_AUTH:\n            return action.payload;\n        case authActionTypes.SET_REPOSITORIES:\n            return {\n                ...state,\n                repositories: action.payload\n            };\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\n// import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\nimport { authReducer } from \"./state/auth-state/auth-reducer\";\nimport { AuthModel } from \"./models\";\n\n\nconst loggerMiddleware = createLogger();\n\nexport interface RootReducerModel {\n    auth: AuthModel\n}\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n});\n\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n// }\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(\n            thunkMiddleware,\n            loggerMiddleware\n        )\n    )\n);\n\n// @ts-ignore\n// export const persistor = persistStore(store);","export const Paths = {\n    ABOUT: '/github-repoboard/about',\n    MY_REPOSITORIES: '/github-repoboard/me',\n    REPOSITORIES_BOARD: '/github-repoboard/repoboard',\n};","import { supabase } from \"../client/client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootReducerModel, setAuth } from \"../redux\";\nimport { AuthModel } from \"../redux/models\";\nimport { message } from \"antd\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Paths } from \"../paths\";\n\n\nconst NotifySuccess = (content: string) => {\n    message.success({ content: content, duration: 1.4 }).then();\n}\n\n\nconst SecretStore = () => {\n\n    let secret: string | null = null;\n\n    const set = (newSecret: string | null | undefined) => {\n        secret = newSecret ?? null;\n    }\n\n    const get = () => {\n        return secret;\n    }\n\n    return {\n        set, get\n    }\n\n}\n\n\nconst useAuth = () => {\n\n    const secret = SecretStore();\n\n    const dispatch = useDispatch();\n    const auth = useSelector<RootReducerModel>(state => state.auth) as AuthModel;\n\n    const resetAuth = () => dispatch(setAuth({ status: false, user: null }));\n    const navigate = useNavigate();\n\n    const checkAuth = () => {\n        const user = supabase.auth.user();\n        const session = supabase.auth.session();\n        secret.set(session?.provider_token);\n\n        user && dispatch(setAuth({\n            status: true,\n            user: {\n                username: user?.user_metadata.user_name,\n                avatarURL: user?.user_metadata.avatar_url,\n                email: user?.email || '',\n                repos: [],\n            }\n        }));\n    }\n\n    const signInWithGithub = () => {\n        supabase.auth.signIn({\n            provider: 'github'\n        }, {\n            scopes: 'repo notifications',\n            redirectTo: `${ process.env.REACT_APP_CLIENT_URL }/github-repoboard/me`\n        })\n            .catch(() => {\n                resetAuth();\n            })\n            .finally(() => {\n                if (auth.status) {\n                    NotifySuccess('You successfully authorized!');\n                }\n            });\n    }\n\n    const signOut = () => {\n        supabase.auth.signOut()\n            .finally(() => {\n                resetAuth();\n                NotifySuccess('You successfully unauthorized!');\n            });\n    }\n\n\n    useEffect(() => {\n        checkAuth();\n        window.addEventListener('hashchange', () => {\n            checkAuth();\n            navigate(Paths.MY_REPOSITORIES);\n        });\n    }, [ auth.status ]);\n\n    return {\n        signInWithGithub,\n        signOut,\n        auth,\n        secret\n    }\n\n}\n\nexport default useAuth;\n","import { useState, useEffect } from 'react';\n\nexport function useMediaQuery(query: string) {\n    const [ matches, setMatches ] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => {\n            setMatches(media.matches);\n        };\n        media.addListener(listener);\n        return () => media.removeListener(listener);\n    }, [ matches, query ]);\n\n    return matches;\n}","export default __webpack_public_path__ + \"static/media/github-logo-white.bea0eaf2.svg\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { useMediaQuery } from '../../hooks/media-query-hook';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { Paths } from '../../paths';\nimport React, { memo } from 'react';\nimport GithubLogo from '../../images/github-logo-white.svg';\n\n\nconst StyledHeader = styled.header({\n    zIndex: 100,\n    position: 'fixed',\n    width: '100%',\n    background: '#2d333b',\n    overflow: 'hidden',\n    paddingLeft: '4vw',\n    paddingRight: '4vw',\n});\n\n\nconst Item = styled(Link)`\n    display: block;\n    background: #2d333b;\n    float: left;\n    text-align: center;\n    padding: 0.8em;\n    text-decoration: none;\n    color: white;\n        &:hover {\n        background: #4b5562;\n        color: white;\n    }\n    &:active {\n        background: #4b5562;\n        color: white;\n    }\n`;\n\nconst AuthButton = styled(Button)`\n    background: #2d333b;\n    float: right;\n    text-align: center;\n    border: 0.1em solid #696969;\n    margin: 0.4em 1em;\n    color: white;\n    &:hover {\n        background: #4b5562;\n        color: white;\n        border: 0.1em solid white;\n    }\n    &:active {\n        background: #4b5562;\n        color: white;\n        border: 0.1em solid white;\n    }\n`;\n\nconst Logo = styled.img({\n    float: 'left',\n    height: '3em',\n    margin: '0.05em 1em',\n});\n\nconst Username = styled.div`\n    float: right;\n    text-align: center;\n    margin: 0.8em 0.2em;\n    color: white;\n`;\n\nconst MobileMoreButton = styled(Dropdown)`\n    margin: 0.4em;\n    color: white;\n    float: right;\n    &:focus {\n        color: #4b5562;\n    }\n`;\n\nexport const Header = memo((props: {\n    authStatus: boolean,\n    username: string | undefined,\n    signOutCallback: () => void,\n    signInCallback: () => void\n}) => {\n\n    const isSmallDevice = useMediaQuery('(max-width: 520px)');\n    const isExtraSmallDevice = useMediaQuery('(max-width: 340px)');\n    const isMinimumSize = useMediaQuery('(max-width: 260px)');\n\n    const MobileMenu = () => {\n        return (\n            <MobileMoreButton overlay={ menu } placement='bottomRight'>\n                <Button type='text' icon={ <MenuOutlined/> }/>\n            </MobileMoreButton>\n        );\n    }\n\n    const menu = (\n        <Menu>\n            {\n                isSmallDevice\n            }\n            <Menu.Item>\n                <Link to={ Paths.ABOUT }>\n                    About\n                </Link>\n            </Menu.Item>\n            <Menu.Item>\n                <Link to={ Paths.MY_REPOSITORIES }>\n                    My repos\n                </Link>\n            </Menu.Item>\n            <Menu.Item>\n                <Link to={ Paths.REPOSITORIES_BOARD }>\n                    Browse repos\n                </Link>\n            </Menu.Item>\n            {\n                props.authStatus &&\n                <Menu.Item onClick={ props.signOutCallback }>\n                    Sign out\n                </Menu.Item> ||\n                <Menu.Item onClick={ props.signInCallback }>\n                    Sign via github\n                </Menu.Item>\n            }\n\n        </Menu>\n    );\n\n    return (\n        <StyledHeader>\n            {\n                !isExtraSmallDevice &&\n                <Link to={ Paths.ABOUT }>\n                    <Logo src={ GithubLogo } alt='Github Logo'/>\n                </Link>\n            }\n            {\n                !isMinimumSize && (\n                    <>\n                        <Item to={ Paths.MY_REPOSITORIES }>\n                            My repos\n                        </Item>\n                        <Item to={ Paths.REPOSITORIES_BOARD }>\n                            Browse repos\n                        </Item>\n                    </>\n                )\n            }\n            {\n                isMinimumSize && <MobileMenu/> || (\n                    isSmallDevice && <MobileMenu/> || (\n                        props.authStatus &&\n                        <AuthButton onClick={ props.signOutCallback }>\n                            Sign out\n                        </AuthButton> ||\n                        <AuthButton onClick={ props.signInCallback }>\n                            Sign via github\n                        </AuthButton>\n                    )\n                )\n            }\n            {\n                props.authStatus && !isSmallDevice && <Username>@{ props.username }</Username>\n            }\n        </StyledHeader>\n    );\n});","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport useAuth from '../hooks/auth-hook';\nimport { Header } from '../components/common/header';\n\n\nconst Content = styled.div({\n    display: 'block',\n    margin: '0',\n    paddingTop: '3em',\n});\n\n\nconst CommonLayout: FC = ({ children }) => {\n\n    const { signInWithGithub, signOut, auth } = useAuth();\n\n\n    return (\n        <>\n            <Header username={ auth.user?.username }\n                    authStatus={ auth.status }\n                    signInCallback={ signInWithGithub }\n                    signOutCallback={ signOut }/>\n            <Content>\n                { children }\n            </Content>\n        </>\n    );\n}\n\nexport default CommonLayout;","import styled from 'styled-components';\n\nconst Section = styled.section({\n    height: '100%',\n    paddingTop: '2em',\n    paddingBottom: '2em',\n    margin: '0 5vw',\n});\n\nexport default Section;","import Section from './helpers/section';\nimport React, { memo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n\nexport const NotFound = memo(() => {\n    let location = useLocation();\n    return (\n        <Section>\n            <h3>\n                The page with the address <code>{ location.pathname }</code> was not found\n            </h3>\n        </Section>\n    );\n});","export default __webpack_public_path__ + \"static/media/github-logo.d9cc7bfd.svg\";","import React, { memo } from 'react';\nimport { Button } from 'antd';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport GithubLogo from '../../images/github-logo.svg';\nimport { Paths } from '../../paths';\nimport useAuth from '../../hooks/auth-hook';\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 1rem;\n    min-height: min(50vw, 30vh);\n    align-items: center;\n    padding-bottom: 2rem;\n`;\n\nconst Text = styled.span({\n    display: 'block',\n    paddingBottom: '1em'\n});\n\nconst Logo = styled.img({\n    width: 'max(14vw, 140px)'\n});\n\nconst CompositeLogo = styled.div({\n    fontSize: 'max(2vw, 20px)',\n    textAlign: 'center',\n    paddingTop: '1rem',\n});\n\nexport const AuthButton = styled(Button)`\n    margin-top: 1em;\n    margin-bottom: 1em;\n    width: 14rem;\n    @media (max-width: 520px) {\n        width: 11rem;\n    }\n`;\n\nconst CentredText = styled.span<{ fontSize: number }>((props) => ({\n    fontSize: `${ props.fontSize }em`,\n    textAlign: 'center',\n}));\n\n\nconst CallToAuth = memo((props: { closeModelCallback?: any }) => {\n\n    const { signInWithGithub } = useAuth();\n\n    const navigate = useNavigate();\n\n    const onContinueAsGuest = () => {\n        props.closeModelCallback && props.closeModelCallback();\n        navigate(Paths.REPOSITORIES_BOARD);\n    }\n\n    return (\n        <Wrapper>\n            <CompositeLogo>\n                <Logo src={ GithubLogo } alt='Github Logo'/>\n                <Text>\n                    RepoBoard\n                </Text>\n            </CompositeLogo>\n            <CentredText fontSize={ 1.15 }>\n                Log into github account to interact your repositories:\n            </CentredText>\n            <AuthButton type='primary' onClick={ signInWithGithub }>Sign in via Github</AuthButton>\n            <CentredText fontSize={ 1 }>\n                Or try browsing public repositories without authorization:\n            </CentredText>\n            <AuthButton type='dashed' onClick={ onContinueAsGuest }>Continue without auth</AuthButton>\n            <Link onClick={ props.closeModelCallback } to={ Paths.ABOUT }>\n                Also you can read more about this app\n            </Link>\n        </Wrapper>\n    );\n});\n\nexport default CallToAuth;","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'antd';\nimport CallToAuth from './call-to-auth';\nimport useAuth from '../../hooks/auth-hook';\n\n\nconst AuthModal = () => {\n\n    const [ visible, setVisible ] = useState(false);\n    const { auth } = useAuth();\n\n    useEffect(() => {\n        setVisible(!auth.status);\n    }, [ auth.status ])\n\n    const handleCancel = () => {\n        setVisible(false);\n    };\n\n    return (\n        <Modal visible={ visible } onCancel={ handleCancel } footer={ null } centered>\n            <CallToAuth closeModelCallback={ handleCancel }/>\n        </Modal>\n    );\n}\n\nexport default AuthModal;\n","import React, { memo } from 'react';\nimport { Skeleton, Card, Avatar } from 'antd';\nimport styled from 'styled-components';\n\n\nconst CardStyle = { width: '22em', margin: '1em' };\n\nconst { Meta } = Card;\n\nconst PropertyWrapper = styled.div({ margin: '1rem 0 0 3rem' });\n\n\nconst RepositoryCard = memo((props: {\n    name: string,\n    description: string,\n    language: string,\n    license: string,\n    licenseURL: string,\n    imageURL: string\n}) => {\n\n    return (\n        <Card style={ CardStyle }>\n            <Skeleton loading={ false } avatar active>\n                <Meta\n                    avatar={ <Avatar src={ props.imageURL }/> }\n                    title={ props.name }\n                    description={ props.description ?? 'Empty description' }\n                />\n                {\n                    props.language &&\n                    <PropertyWrapper>\n                        Language:&#8195;\n                        { props.language }\n                    </PropertyWrapper>\n                }\n                {\n                    props.license &&\n                    <PropertyWrapper>\n                        License:&#8195;\n                        <a href={ props.licenseURL }>\n                            { props.license }\n                        </a>\n                    </PropertyWrapper>\n                }\n            </Skeleton>\n        </Card>\n    );\n});\n\nexport default RepositoryCard;","import { Octokit } from \"octokit\";\n\nexport const octokit = new Octokit();\n","import { useEffect, useState } from 'react';\nimport { octokit } from '../client/octokit';\nimport { usePagination } from './pagination-hook';\n\n\nconst prepareQuery = (query: string) => query\n    .split(' ')\n    .filter(topic => !!topic)\n    .map(topic => `topic:${ topic }+`)\n    .reduce((query, topic) => query + topic);\n\n\nexport interface SearchFilters {\n    order: 'asc' | 'desc',\n    sort?: 'stars' | 'forks' | 'help-wanted-issues' | 'updated',\n}\n\n\nexport const useReposSearch = (defaultPageSize: number) => {\n\n    const { pagination, setPagination } = usePagination(defaultPageSize);\n\n    const [ fetching, setFetching ] = useState<boolean>(false);\n    const [ fetchingError, setFetchingError ] = useState<string>('');\n\n    const [ searchQuery, setSearchQuery ] = useState<string>('');\n    const [ searchTopics, setSearchTopics ] = useState<string>('');\n\n    const [ searchFilters, setSearchFilters ] = useState<SearchFilters>({\n        order: 'asc',\n        sort: undefined,\n    });\n\n    const [ repos, setRepos ] = useState<{\n        totalCount: number, items?: Array<any> | null\n    }>({\n        totalCount: 0,\n        items: null\n    });\n\n    const resetRepos = () => setRepos({ totalCount: 0, items: null });\n\n\n    useEffect(() => {\n        setFetchingError('');\n        searchQuery && setFetching(true);\n\n        searchQuery && octokit.rest.search.repos({\n            q: searchQuery + ' ' + (searchTopics ?? prepareQuery(searchTopics)),\n            order: searchFilters.order,\n            sort: searchFilters.sort,\n            per_page: pagination.pageSize,\n            page: pagination.page\n        })\n            .then(repos => {\n                setRepos({\n                    totalCount: repos.data.total_count,\n                    items: repos.data.items && repos.data.items || null\n                });\n            })\n            .catch(error => {\n                setFetchingError(error.code + ' ' + error.message);\n            })\n            .finally(() => {\n                setFetching(false);\n            });\n    }, [ searchQuery, searchTopics, pagination, searchFilters ]);\n\n    return {\n        searchQuery: searchQuery,\n        setSearchQuery: setSearchQuery,\n        searchTopics: searchTopics,\n        setSearchTopics: setSearchTopics,\n        pagination: pagination,\n        setPagination: setPagination,\n        searchFilters: searchFilters,\n        setSearchFilters: setSearchFilters,\n        fetching: fetching,\n        fetchingError: fetchingError,\n        repos: repos,\n        resetRepos: resetRepos\n    }\n\n};","import { useState } from \"react\";\n\nexport const usePagination = (defaultPageSize: number) => {\n    const [ pagination, setPagination ] = useState<{\n        page: number,\n        pageSize: number\n    }>({\n        page: 1,\n        pageSize: defaultPageSize\n    });\n    return {\n        pagination,\n        setPagination\n    };\n}","import styled from 'styled-components';\nimport { Pagination as AntPagination } from 'antd';\n\nexport const Pagination = styled(AntPagination)`\n    display: flex;\n    justify-content: center;\n    margin-top: 2em;\n    margin-bottom: 1.5em;\n`;\n","import React, { ReactElement } from 'react';\nimport { Alert, Divider, Empty, Input, Row, Select, Spin } from 'antd';\nimport RepositoryCard from './../common/repository-card';\nimport { useReposSearch } from '../../hooks/repos-search-hook';\nimport Section from './helpers/section';\nimport styled from 'styled-components';\nimport { useMediaQuery } from '../../hooks/media-query-hook';\nimport { Pagination } from '../common/pagination';\n\n\nconst TopicsSelectStyle = { width: '100%', marginTop: '0.2em', marginBottom: '0.5em' };\n\nconst RepoCardsBox = styled(Row)({\n    justifyContent: 'center',\n});\n\nconst FiltersWrapper = styled.div({\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: '1em',\n});\n\nconst OverflowNotification = styled.p({\n    fontSize: '0.7em',\n    lineHeight: '1em',\n    color: '#7c7c7c'\n});\n\nconst FilterSelectWrapper = (props: { children?: ReactElement, title: string }) => {\n    return (\n        <div style={ { display: 'flex', verticalAlign: 'middle' } }>\n            <div style={ { lineHeight: '2.165em', verticalAlign: 'middle', color: '#8d8d8d' } }>\n                { props.title }\n            </div>\n            { props.children }\n        </div>\n    );\n}\n\nconst SearchBox = styled.div`\n    z-index: 40;\n    position: fixed;\n    top: 3em;\n    left: 0;\n    padding: 1em 4em;\n    padding-top: 2em;\n    border-radius: 0.15em;\n    width: 100vw;\n    background: rgb(250, 250, 250);\n    box-shadow: 0 0.01em 0.5em #DDDDDD;\n    @media (max-width: 520px) {\n        padding: 2em 2em;\n    }\n`;\n\nconst ContentBox = styled.div`\n    width: 90vw;\n    margin-top: 12.5em;\n`;\n\nconst RepositoriesBoardTab = () => {\n\n    const defaultPageSize = 10;\n    const pageSizeOptions = [ '5', `${ defaultPageSize }` ];\n\n    const {\n        setSearchQuery,\n        pagination,\n        searchFilters,\n        setSearchFilters,\n        setSearchTopics,\n        setPagination,\n        fetching,\n        fetchingError,\n        repos\n    } = useReposSearch(defaultPageSize);\n\n    const onPageChange = (page: number, pageSize?: number) => {\n        setPagination({ page: page, pageSize: pageSize ?? defaultPageSize });\n    }\n\n    const onSearchInput = (value: string) => {\n        setSearchQuery(value);\n    }\n\n    const onOrderSelect = (value: 'asc' | 'desc') => {\n        setSearchFilters({ ...searchFilters, order: value })\n    }\n\n    const onSortSelect = (value: '' | 'stars' | 'forks' | 'help-wanted-issues' | 'updated') => {\n        setSearchFilters({ ...searchFilters, sort: value || undefined });\n    }\n\n    const onTopicSelect = (topics: string) => {\n        setSearchTopics(topics);\n    }\n\n    const onTopicsClear = () => {\n        setSearchTopics('');\n    }\n\n    const { Option } = Select;\n\n    const isMobileDevice = useMediaQuery('(min-width: 280px)');\n    const SelectStyle = { width: '9em', margin: `0 ${ isMobileDevice && 2 || 0.5 }em` };\n\n\n    return (\n        <Section>\n            <SearchBox>\n                <Input.Search onSearch={ onSearchInput } size='large' placeholder='Search for repos'/>\n                <Select placeholder='Topics' mode='tags' size='middle' tokenSeparators={ [ ' ' ] }\n                        style={ TopicsSelectStyle }\n                        onChange={ onTopicSelect } onClear={ onTopicsClear }\n                />\n                <FiltersWrapper>\n                    <FilterSelectWrapper title={ 'Sort by' }>\n                        <Select style={ SelectStyle } bordered={ false } defaultValue={ searchFilters.sort ?? '' }\n                                onSelect={ onSortSelect }>\n                            <Option value=''>Best match</Option>\n                            <Option value='stars'>Stars</Option>\n                            <Option value='forks'>Forks</Option>\n                            <Option value='help-wanted-issues'>Help wanted</Option>\n                            <Option value='updated'>Update rate</Option>\n                        </Select>\n                    </FilterSelectWrapper>\n                    {\n                        searchFilters.sort &&\n                        <FilterSelectWrapper title={ 'Order by' }>\n                            <Select style={ SelectStyle } bordered={ false } defaultValue={ searchFilters.order }\n                                    onSelect={ onOrderSelect }>\n                                <Option value='asc'>Ascending</Option>\n                                <Option value='desc'>Descending</Option>\n                            </Select>\n                        </FilterSelectWrapper>\n                    }\n                </FiltersWrapper>\n            </SearchBox>\n            <ContentBox>\n                {\n                    fetchingError && (\n                        <Alert message='Error loading data!' description={ fetchingError } type='error' closable/>\n                    ) || (\n                        <Divider orientation='left'>\n                            { repos && 'Found: ' + repos.totalCount || 'Repositories' }\n                        </Divider>\n                    )\n                }\n                <RepoCardsBox gutter={ { xs: 1, sm: 2, md: 4 } }>\n                    {\n                        !fetchingError && fetching && <Spin/>\n                        || (\n                            repos.items && repos.items.map(\n                                repo => <RepositoryCard\n                                    key={ repo.id }\n                                    name={ repo.name }\n                                    description={ repo.description }\n                                    language={ repo.language }\n                                    license={ repo.license && repo.license.name || null }\n                                    licenseURL={ repo.license && repo.license.url || null }\n                                    imageURL={ repo.name }\n                                />\n                            ) || (\n                                !fetchingError && !fetching && <Empty description={\n                                    'To search for repositories, enter your query in the search bar above'\n                                }/>\n                            )\n                        )\n                    }\n                </RepoCardsBox>\n                {\n                    !fetchingError && repos.items && repos.items.length > 1 && repos.totalCount >= 1000 &&\n                    <OverflowNotification>\n                        Only first 1000 results available ({ 1000 / pagination.pageSize } pages) according github API\n                        docs.\n                    </OverflowNotification>\n                }\n                {\n                    !fetchingError && repos.items && repos.items.length > 1 &&\n                    <Pagination\n                        total={ repos.totalCount >= 1000 ? 1000 : repos.totalCount }\n                        pageSizeOptions={ pageSizeOptions }\n                        onChange={ onPageChange }\n                        responsive={ false }\n                        showSizeChanger\n                        showLessItems\n                    />\n                }\n            </ContentBox>\n        </Section>\n    );\n}\n\nexport default RepositoriesBoardTab;","import React, { useEffect, useState } from 'react';\nimport { Divider, Empty, Row, Spin, Statistic } from 'antd';\nimport { octokit } from '../../client/octokit';\nimport RepositoryCard from './../common/repository-card';\nimport useAuth from '../../hooks/auth-hook';\nimport CallToAuth from './../common/call-to-auth';\nimport Section from './helpers/section';\nimport styled from 'styled-components';\nimport { useMediaQuery } from '../../hooks/media-query-hook';\nimport { usePagination } from '../../hooks/pagination-hook';\nimport { Pagination } from '../common/pagination';\n\n\nconst funnyCatImageURL = `https://i.ytimg.com/vi/Zr-qM5Vrd0g/maxresdefault.jpg`;\n\nconst StyledStatistic = styled(Statistic)`\n    margin: 0.2em 4vw;\n    @media (max-width: 520px) {\n        margin: 0.3em 5vw;\n        font-size: 0.4em;\n    }\n`;\n\nconst UserInfo = (props: { title: string, value?: string }) => {\n\n    let mobile = useMediaQuery('(max-width: 360px)');\n    let tablet = useMediaQuery('(max-width: 520px)');\n\n    return (\n        <StyledStatistic valueStyle={ {\n            fontSize: mobile && '2em' || tablet && '3em' || '2em'\n        } } title={ props.title } value={ props.value }/>\n    );\n}\n\n\nconst Repositories = styled(Row)`\n    justify-content: space-evenly;\n    margin: 0 10vw;\n    @media (max-width: 520px) {\n        display: flex;\n        margin: 0;\n    }\n`;\n\n\nconst MyRepositoriesTab = () => {\n\n    const { auth } = useAuth();\n\n    const [ repos, setRepos ] = useState<Array<any>>([]);\n    const [ fetching, setFetching ] = useState(false);\n\n    useEffect(() => {\n        setFetching(true);\n\n        auth.user?.username && octokit.rest.repos.listForUser({\n            username: auth.user?.username,\n        })\n            .then(repos => {\n                setRepos(repos.data);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                setFetching(false);\n            });\n\n    }, [ auth ]);\n\n\n    return (\n        <Section>\n            {\n                auth.status && (\n                    <>\n                        <Divider orientation='left'>Profile</Divider>\n                        <div style={ { display: 'flex' } }>\n                            <UserInfo title='Username' value={ auth.user?.username }/>\n                            <UserInfo title='Email' value={ auth.user?.email }/>\n                        </div>\n                        <Divider orientation='left'>Repositories</Divider>\n                        {\n                            fetching && <Spin/> || (\n                                <Repositories gutter={ { xs: 1, sm: 2, md: 3, lg: 3 } }>\n                                    {\n                                        repos && repos.map(\n                                            repo => <RepositoryCard\n                                                key={ repo.id }\n                                                name={ repo.name }\n                                                description={ repo.description }\n                                                language={ repo.language }\n                                                license={ repo.license && repo.license.name || null }\n                                                licenseURL={ repo.license && repo.license.url || null }\n                                                imageURL={ auth.user?.avatarURL || funnyCatImageURL }\n                                            />\n                                        ) || <Empty description={ false }/>\n                                    }\n                                </Repositories>\n                            )\n                        }\n                    </>\n                ) || <CallToAuth/>\n            }\n        </Section>\n    );\n}\n\nexport default MyRepositoriesTab;","import React, { memo } from 'react';\nimport Section from './helpers/section';\n\n\nconst AboutTab = memo(() => {\n    return (\n        <Section>\n            <h2>About this application:</h2>\n            <p>\n                RepoBoard is a demo React application made as a test task for the WinSolutions company.\n            </p>\n\n            <h3>Libraries used:</h3>\n            This is a main part of libraries used in this project:\n            <code style={ {\n                display: 'block',\n                fontSize: '0.8em',\n                lineHeight: '1.6em',\n                marginBottom: '1em',\n                padding: '2em',\n                borderRadius: '0.4em',\n                maxWidth: '20rem',\n                background: '#eaeaea'\n            } }>\n                \"@supabase/supabase-js\": \"^1.25.2\",<br/>\n                \"antd\": \"^4.16.13\",<br/>\n                \"octokit\": \"^1.7.0\",<br/>\n                \"react-router-dom\": \"^6.0.0\",<br/>\n                \"redux\": \"^4.1.2\",<br/>\n                \"redux-devtools-extension\": \"^2.13.9\",<br/>\n                \"redux-logger\": \"^3.0.6\",<br/>\n                \"redux-thunk\": \"^2.4.0\",<br/>\n                \"styled-components\": \"^5.3.3\",<br/>\n                \"typescript\": \"^4.4.4\",\n            </code>\n            <p>\n                <strong>Supabase</strong> used for oauth because storing a token on the frontend is not secure.<br/>\n                <strong>Ant Design</strong> was chosen as the core component library for UI. <br/>\n                To extend and customize it <strong>styled components</strong> were chosen.<br/>\n                <strong>Redux / thunk</strong> used as state manager, but there are lot of things implemented\n                using <strong>react hooks</strong>.<br/>\n            </p>\n        </Section>\n    );\n});\n\nexport default AboutTab;","import React, { FC } from 'react';\nimport CommonLayout from './layouts/common-layout';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Routes\n} from 'react-router-dom';\n\nimport { Paths } from \"./paths\";\nimport { NotFound } from \"./components/tabs/not-found-tab\";\nimport AuthModal from \"./components/common/auth-modal\";\nimport RepositoriesBoardTab from \"./components/tabs/repositories-board-tab\";\nimport MyRepositoriesTab from \"./components/tabs/my-repositories-tab\";\nimport AboutTab from \"./components/tabs/about-tab\";\n\n\nconst App: FC = () => {\n\n    return (\n        <Router>\n            <AuthModal/>\n            <CommonLayout>\n                <Routes>\n                    <Route path={ '/github-repoboard' } element={ <RepositoriesBoardTab/> }/>\n                    <Route path={ Paths.ABOUT } element={ <AboutTab/> }/>\n                    <Route path={ Paths.MY_REPOSITORIES } element={ <MyRepositoriesTab/> }/>\n                    <Route path={ Paths.REPOSITORIES_BOARD } element={ <RepositoriesBoardTab/> }/>\n                    <Route path=\"*\" element={ <NotFound/> }/>\n                </Routes>\n            </CommonLayout>\n        </Router>\n    );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={ store }>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}